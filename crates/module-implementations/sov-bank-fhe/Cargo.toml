[package]
name = "sov-bank-fhe"
description = "A Sovereign SDK managing confidential fungible tokens, analogous to Encrypted ERC20"
authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }

version = { workspace = true }
readme = "README.md"
publish = false
resolver = "2"

[dependencies]
anyhow = { workspace = true }
borsh = { workspace = true, features = ["rc"] }
jsonrpsee = { workspace = true, features = ["macros", "client-core", "server"], optional = true }
schemars = { workspace = true, optional = true }
serde = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }

sov-modules-api = { workspace = true }
sov-state = { workspace = true }

# FHE depencencies
[target.'cfg(all(target_arch = "x86_64", unix))'.dependencies]
tfhe = { version = "0.7.2", features = ["boolean", "shortint", "integer", "x86_64-unix"] }
[target.'cfg(all(target_arch = "x86_64", not(unix)))'.dependencies]
tfhe = { version = "0.7.2", features = ["boolean", "shortint", "integer", "x86_64"] }
[target.'cfg(all(target_arch = "aarch64", unix))'.dependencies]
tfhe = { version = "0.7.2", features = ["boolean", "shortint", "integer", "aarch64-unix"] }
bincode = { workspace = true }
serde_json = { workspace = true }

[dev-dependencies]
sov-bank-fhe = { path = ".", features = ["native", "test-utils"] }
tempfile = { workspace = true }
# sov-prover-storage-manager = { workspace = true, features = ["test-utils"] }
sov-test-utils = { workspace = true }

[features]
default = []
native = [
    "jsonrpsee",
    "schemars",
    "sov-bank-fhe/native",
    "sov-modules-api/native",
    "sov-state/native",
]
cli = ["native"]
test-utils = []

[[bin]]
name = "fhe-keygen"
path = "src/bin/fhe_keygen.rs"

[[bin]]
name = "request-scripts-gen"
path = "src/bin/request_scripts_gen.rs"
